MAE_WORKDIR = cfg.MAE.getWorkdir(str_=False)

MAE_index_name = "mae-pipeline"
MAE_index_input, MAE_index_output, MAE_graph_file, _ = createIndexRule(
    scriptsPath=str(MAE_WORKDIR),
    index_name=MAE_index_name
)

rule mae:
    input: MAE_index_input, MAE_graph_file
    output: MAE_index_output
    run: ci(str(MAE_WORKDIR), MAE_index_name)

rule mae_dependency:
    output: MAE_graph_file
    shell: "snakemake --rulegraph {MAE_index_output} | dot -Tsvg -Grankdir=TB > {output}"

rule sampleQC:
    input: cfg.getHtmlFromScript(MAE_WORKDIR / "QC" / "Datasets.R")

rule create_dict:
    input: cfg.getFastaFile()
    output: cfg.getFastaDict()
    params:
        gatk = cfg.getTool("gatkCmd"),
    shell: "{params.gatk} CreateSequenceDictionary --REFERENCE {input}"

## MAE
rule mae_createSNVs:
    input:
        ncbi2ucsc = MAE_WORKDIR / "resource" / "chr_NCBI_UCSC.txt",
        ucsc2ncbi = MAE_WORKDIR / "resource" / "chr_UCSC_NCBI.txt",
        vcf_file  = lambda w: cfg.MAE.getVcf(w.vcf),
        bam_file  = lambda w: sa.getFilePath(w.rna, 'RNA_BAM_FILE'),
        script    = MAE_WORKDIR / "MAE" / "filterSNVs.sh"
    output:
        snvs_filename = cfg.processedDataDir / "mae" / "snvs" / "{vcf}--{rna}.vcf.gz",
        snvs_index = cfg.processedDataDir / "mae" / "snvs" / "{vcf}--{rna}.vcf.gz.tbi"
    params:
        bcftools = cfg.getTool("bcftoolsCmd"),
        samtools = cfg.getTool("samtoolsCmd")
    shell:
        """
        {input.script} {input.ncbi2ucsc} {input.ucsc2ncbi} {input.vcf_file} \
        {wildcards.vcf} {input.bam_file} {output.snvs_filename} \
        {params.bcftools} {params.samtools}
        """

rule mae_allelicCounts:
    input:
        ncbi2ucsc = MAE_WORKDIR / "resource" / "chr_NCBI_UCSC.txt",
        ucsc2ncbi = MAE_WORKDIR / "resource" / "chr_UCSC_NCBI.txt",
        vcf_file  = rules.mae_createSNVs.output.snvs_filename,
        bam_file  = lambda w: sa.getFilePath(w.rna, 'RNA_BAM_FILE'),
        fasta     = cfg.getFastaFile(),
        dict      = cfg.getFastaDict(),
        script    = MAE_WORKDIR / "MAE" / "ASEReadCounter.sh"
    output:    
        counted = cfg.processedDataDir / "mae" / "allelic_counts" / "{vcf}--{rna}.csv.gz"
    params:
        bcftools = cfg.getTool("bcftoolsCmd"),
        samtools = cfg.getTool("samtoolsCmd"),
        gatk = cfg.getTool("gatkCmd"),
        gatkIgnoreHeaderCheck = cfg.MAE.get("gatkIgnoreHeaderCheck")
    shell:
        """
        {input.script} {input.ncbi2ucsc} {input.ucsc2ncbi} \
        {input.vcf_file} {input.bam_file} {wildcards.vcf}--{wildcards.rna} \
        {input.fasta} {params.gatkIgnoreHeaderCheck} {output.counted} \
        {params.bcftools} {params.samtools} {params.gatk}
        """
